/*
 * This source file was generated by the Gradle 'init' task
 */
package com.dicoding.kotlin

class User(val name : String, val age : Int){
    override fun toString(): String {
        return "User(name=$name, age=$age)"
        // User(name=nrohmen, age=17)
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false
 
        other as User
 
        if (name != other.name) return false
        if (age != other.age) return false
 
        return true
    }
 
    override fun hashCode(): Int {
        var result = name.hashCode()
        result = 31 * result + age
        return result
    }
}
 
data class DataUser(val name : String, val age : Int)

fun main() {
    val user = User("nrohmen", 17)
    val dataUser = DataUser("nrohmen", 17)

    println(user)
    println(dataUser)

    // output
    // com.dicoding.kotlin.User@85ede7b
    // DataUser(name=nrohmen, age=17)

    // Dengan begitu, Anda bisa langsung mengetahui semua informasi dari dataUser hanya dengan melihat value dari properti yang ada. Mengapa demikian? Karena seperti yang sudah disampaikan sebelumnya,  data class akan secara otomatis menghasilkan fungsi toString() di dalamnya. Tanpa data class, kita perlu membuat fungsi toString() secara manual untuk mendapatkan informasi seperti yang diberikan oleh objek dataUser. Sebagai contoh, untuk menampilkan informasi yang jelas dari objek user, maka kita perlu menambahkan fungsi toString()


    val dataUser1 = DataUser("nrohmen", 17)
    val dataUser2 = DataUser("nrohmen", 17)
    val dataUser3 = DataUser("dimas", 24)
 
    println(dataUser1.equals(dataUser2))
    println(dataUser1.equals(dataUser3))

    /*
    true
    false
    */

    val user1 = User("nrohmen", 17)
    val user2 = User("nrohmen", 17)
    val user3 = User("dimas", 24)
 
    println(user1.equals(user2)) // setelah overide fun equals jadi true
    println(user1.equals(user3))

    // karena dia tidak membandingkan kontennya, melainkan lokasi object (referensi) pada memory.

    /*
    false
    false
    */
}