/*
 * This source file was generated by the Gradle 'init' task
 */
package com.dicoding.kotlin

// Singleton Object

// Dalam dunia Kotlin, sebuah Class dapat diinisialisasi berkali-kali di tempat dan waktu yang berbeda-beda. Lalu, bagaimana jika kita menginginkan tanpa adanya duplikasi Class dalam penggunaanya? Di sinilah kita perlu memahami konsep Singleton. Singleton merupakan pattern yang berguna untuk memastikan suatu object hanya memiliki satu instance dengan satu titik akses global.

// Uniknya, pembuatan Singleton dalam bahasa Kotlin sangatlah simpel dan mudah karena cukup menggunakan keyword object seperti berikut ini.


object CentralLibrary {
    fun borrowBookById(id: Int) {
        print("Book with $id has been borrowed")
    }
}

// Sekilas kodenya memang mirip dengan Class biasanya, tetapi ketahuilah bahwa tidak ada penggunaan constructor dalam pembuatan object karena Kotlin sudah menanganinya.

// Oke, selanjutnya mari kita lihat perbedaan dalam penggunaannya pada kode di bawah ini.

fun main() {
    CentralLibrary.borrowBookById(21)

    // Berbeda dengan class biasanya, Anda tidak perlu membuat instance (inisialisasi) terlebih dahulu untuk menggunakan object. Anda bisa memanggil fungsi maupun property yang ada di dalamnya secara langsung. Menariknya, kita bisa memanggilnya di mana pun dan akan mengembalikan object yang sama setiap waktu.
}