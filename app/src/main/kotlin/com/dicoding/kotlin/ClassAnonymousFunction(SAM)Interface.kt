/*
 * This source file was generated by the Gradle 'init' task
 */
package com.dicoding.kotlin

// Function (SAM) Interface
// Ada hal menarik dari implementasi anonymous class, yakni Anda dapat menggunakan function interface untuk membuat kode Anda lebih ringkas dan bisa dibaca dengan mudah. Function Interface atau biasa disebut Single Abstract Method (SAM) Interface adalah sebuah interface yang memiliki satu method abstract. Anda cukup menambahkan keyword “fun” sebelum keyword “interface” .

fun interface IFly {
    fun fly()
}

fun flyWithWings(bird: IFly) {
    bird.fly()
}

// Alih-alih menuliskan keyword object dan override fungsi di dalamnya berkali-kali, Anda dapat meringkas penulisannya dengan SAM Conversion. Berikut adalah contoh kode ketika Anda menggunakan SAM Conversion.

fun main() {
    flyWithWings(object : IFly {
        override fun fly() {
            println("The Bird flying")
        }
    })

    // Dengan memanfaatkan Kotlin SAM conversion, Anda dapat mengubahnya menjadi seperti ini.

    flyWithWings {
        println("The Bird flying")
    }

    // Akhirnya, penggunaan Functional (SAM) Interface yang hanya menggunakan kurung kurawal telah menggantikan semua kode yang tidak diperlukan. Yang perlu menjadi catatan adalah cara ini hanya bisa dilakukan pada interface yang hanya memiliki member satu fungsi saja, sesuai dengan namanya yakni Single Abstract Method (SAM).

    // Anda akan sering menemui konsep seperti ketika memasuki dunia pemrograman Android untuk melakukan perintah tertentu ketika ada aksi, seperti ketika tombol ditekan. 

    /*
    
    myButton.setOnClickListener(object : OnClickListener{
        override fun onClick(p0: View?) {
            //melakukan perintah tertentu
        }
    })
        
    //menggunakan SAM Interface
    myButton.setOnClickListener {
        //melakukan perintah tertentu
    }
    
    */
}