/*
 * This source file was generated by the Gradle 'init' task
 */
package com.dicoding.kotlin

fun main() {
    val number = sumNumbers(10, 20, 30, 40)
    println(number)

    val numberSize = getNumberSize(10, 20, 30, 40, 50)
    println(numberSize)
}


// Vararg (Variable Argument)
// Selain named dan default argument, Kotlin juga memiliki vararg (variable argument). Dengan menggunakan kata kunci vararg, kita juga bisa menyederhanakan beberapa parameter yang memiliki tipe data yang sama menjadi parameter tunggal.

fun sumNumbers(vararg number: Int): Int {
    return number.sum()
}

// Karena pada dasarnya adalah sebuah Array, kita bisa memanggil fungsi atau properti yang tersedia pada kelas Array dari dalam fungsi tersebut, contohnya seperti properti size

 
fun getNumberSize(vararg number: Int): Int {
    return number.size
}

// kapan pake vararg ketika punya fungsi tidak mengetahui jumlah argument , contoh String.format()


// Aturan pada Vararg Arguments
// tidak dizinkan memiliki 2 paremeter bertanda vararg
// fun sumNumbers(vararg number: Int, vararg number2: Int) error

//  jika kita ingin menambahkan parameter baru tanpa kata kunci vararg, parameter yang ditandai dengan vararg sebaiknya berada pada posisi terakhir



// fun sets(name: String, vararg number: Int): Int {
//     ...
// }

// pemanggilan nya
// sets("Kotlin", 10, 10)

// kalau simpen argument di depan
 
// fun sets(vararg number: Int, name: String): Int {
//     ...
// }

// pemanggilan nya
// sets(10, 10, name = "Kotlin")


// Vararg vs Array

//  val number = arrayOf(10, 20, 30, 40)
//  sets(number)

// fun sets(number: Array<Int>) {
//     ...
// }

// Ketika fungsi di atas dipanggil, fungsi tersebut membutuhkan argumen berupa nilai yang sudah berbentuk Array
// Berbeda ketika kita menggunakan vararg, kita bisa memasukkan argumen satu persatu.

// kita bisa masukan nilai yang sudah berbentuk array ke argument vararg dengan spread operator (*)


// val number = intArrayOf(10, 20, 30, 40)
// sets(10, 20, 20, *number , 10)
// fun sets(vararg number: Int): Int {
//     ...
// }